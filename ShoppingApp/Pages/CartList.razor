@page "/Cart"

@using ShoppingApp.Services

@inject ProductServices ProductService
@inject CartServices CartService
@inject CategoryServices CategoryService

<NavMenu cartCount="@CartService.CustomerProducts.Count()"></NavMenu>

@*End of nav*@

<div class="main container">
    <div class="content px-4">
        <div class="row">
            <div class="col-sm-12">
                <h3 class="text-center">Cart List</h3>

                @if (CartService.CustomerProducts == null || CartService.CustomerProducts.Count() < 1)
                {
                    <h3 class="text-center text-secondary">Nothing in the cart</h3>
                }
                else

                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Photo</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Category</th>
                                <th scope="col">Price</th>
                                <th scope="col">Sub Total Price</th>
                                <th scope="col" class="text-center">Quantity</th>
                            </tr>
                        </thead>
                        @{ double total = 0;}
                        @foreach (var cart in CartService.CustomerProducts)
                        {
                            <tbody>
                                <tr>
                                    @{
                                        var cartProduct = ProductService.Products.FirstOrDefault(pp => pp.ProductId == cart.ProductId);
                                    }
                                    <th scope="row"><img height="30" src="@cartProduct.PhotoPath" alt="Product image" /></th>

                                    <td> @cartProduct.Name </td>
                                    <td>@CategoryService.GetCategories().FirstOrDefault(c => c.categoryId == cartProduct.CategoryId).Name</td>
                                    <td>R @(Math.Round(cartProduct.Price,2).ToString("N"))</td>
                                    <td>R @(Math.Round(cartProduct.Price * cart.Quantity, 2))</td>
                                    <td>
                                        <div class="input-group">
                                            <button class="btn btn-success rem-Product col-sm-12 col-md-2" @onclick="(() => CartService.DecreaseProductQuantity(cartProduct.ProductId,1,1))"><b>-</b></button>
                                            <input type="text" readonly class="text-center form-control col-sm-12" value="@cart.Quantity in a Cart" />
                                            <button class="btn btn-success add-Product col-sm-12 col-md-2" @onclick="(() => CartService.IncreaseProductQuantity(cartProduct.ProductId,1,1))"><b>+</b></button>
                                        </div>
                                    </td>

                                    @{
                                        total = total + (cartProduct.Price * cart.Quantity);
                                    }
                                </tr>
                            </tbody>
                        }
                        <tfoot>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>Total: R @(Math.Round(total,2).ToString("N"))</td>
                            </tr>
                        </tfoot>
                    </table>
                }
            </div>
        </div>
        <div class="row">
            @{
                string check = "0";
            }
            @if (CartService.CustomerProducts.Count() > 0)
            {
                <a href="/Thankyou/@check" class="btn btn-lg btn-outline-success float-right">Check Out</a>
            }
        </div>
    </div>
</div>
