@page "/"
@using ShoppingApp.Services

@inject ProductServices ProductService
@inject CartServices CartService
@inject IJSRuntime JSRuntime

<NavMenu cartCount="@CartService.Cart.ProductGroups.Count()" OnfilterByproduct="FilterByProduct"></NavMenu>

<div class="row">
    <div class="col-sm-12 aa">
        <div class="showcase" id="showcase-id" onclick="document.getElementById('down').scrollIntoView({behavior:'smooth'})">
            <div class="dark-background">
                <div class="vertical-center text-success">
                    <h3 class="col-md-12 col-sm-10 text-center">Foodies</h3>
                    <h4 class="col-md-12 col-sm-10 text-center">Select and buy any type of food you want</h4>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="main container">
    <div class="content px-4">
        <div class="row">
            @if (ProductService.GetProducts() == null)
            {
                <h3>No Products available</h3>
            }
            else
            {
                var products = ProductService.GetProducts();

                if (ProductService.FilteredProducts.Count() > 0)
                {
                    if (ProductName != null && ProductName.Length > 0)
                    {
                        products = ProductService.FilteredProducts;

                    }
                }
                else
                {
                    if (ProductName != null && ProductName.Length > 0)
                    {
                        <h3 class="text-danger text-center col-12 my-down">No product '@ProductName' is found</h3>
                        <h4 class="text-secondary col-12">All Products...</h4>
                    }
                }
                <h4 class="text-secondary col-sm-12 text-center" id="down">Product List</h4>
                <div class="col-sm-12 my-4">
                    <div class="col-sm-12 col-md-4 float-md-left">
                    </div>
                    <Sort OnSort="Sort"></Sort>
                </div>

                foreach (var product in products)
                {

                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <div class="card">
                            <div class="card-header text-center text-uppercase font-weight-bolder">
                                @product.Name
                            </div>
                            <div class="card-body">
                                <div class="text-center">
                                    <a href="/ProductDetails/@product.Id"><img src='@product.Image' title='@product.Name' class="card-img" alt='@product.Name' /></a>
                                </div>
                                @*<div class="text-center">@product.Description</div>*@
                                <div class="text-right btn btn-secondary">R @product.Price.ToString("N")</div>
                            </div>
                            @if (CartService.Cart.ProductGroups.Any(c => c.ProductId == product.Id))
                            {
                                <div class="card-footer text-center" onclick="ChangeButtonForm('@product.Id')">
                                    <div class="input-group">
                                        <button class="btn btn-success rem-Product" id="@product.Id" @onclick="(() => CartService.DecreaseProductQuantity(product.Id))"><b>-</b></button>
                                        <input type="text" readonly class="text-center form-control" value="@CartService.Cart.ProductGroups.FirstOrDefault(c => c.ProductId == product.Id).Quantity in a Cart" />
                                        <button class="btn btn-success add-Product" id="@product.Id" @onclick="(() => CartService.IncreaseProductQuantity(product.Id))"><b>+</b></button>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="card-footer text-center desc-view-btn" onclick="ChangeButtonForm('@product.Id')">
                                    <button class="btn btn-success" id="@product.Id" @onclick="(() => CartService.CreateCartAndAddItemsToCart(product.Id, 1, 1))">Add to cart</button>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
@code
{
    public string ProductName { get; set; }
    public async Task FilterByProduct(string productName)
    {
        ProductName = productName;
        ProductService.FilteredProducts.ToList();

        if(ProductService.FilteredProducts.Count > 0)
        {
            await CallJsMethod();
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("MoveUpToError");
        }
    }

    public void Sort(string sortValue)
    {
        ProductService.Products.ToList();
    }

    public async Task CallJsMethod()
    {
        await JSRuntime.InvokeVoidAsync("MoveDown");
    }
}