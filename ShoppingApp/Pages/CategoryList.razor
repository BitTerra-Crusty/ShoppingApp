@page "/Category"
@using ShoppingApp.Services

@inject ProductServices ProductService
@inject CartServices CartService
@inject CategoryServices CategoryService
@inject IJSRuntime JSRuntime

<NavMenu cartCount="@CartService.CustomerProducts.Count()" OnfilterByproduct="FilterByProduct"></NavMenu>

@*End of nav*@
<div class="main container" id="up">
    <div class="content px-4">

        <div class="main">
            <div class="content px-4 my-5">

                @if (CategoryService.GetCategories() == null)
                {
                    <div class="row">
                        <h3 class="text-secondary text-center">Nothing in categories</h3>
                    </div>
                }
                else
                {
                    var categories = CategoryService.GetCategories();
                    if (CategoryName != null && CategoryName != "")
                    {
                        categories = categories.Where(c => c.Name.ToLower().Contains(CategoryName.ToLower())).ToList();
                    }

                    if (categories.Count < 1)
                    {
                        <h3 class="text-danger text-center col-12">No category '@CategoryName' is found</h3>
                        <h4 class="text-secondary col-12">All Categories...</h4>
                        categories = CategoryService.GetCategories();
                    }

                    <div class="categories">
                        <div class="row">
                            @foreach (var category in categories)
                            {
                                <div class="col-sm-12 col-md-6 col-lg-4">
                                    <div class="card">
                                        <div class="card-header text-center text-uppercase font-weight-bolder">
                                            @category.Name
                                        </div>
                                        <div class="card-body">
                                            <div class="text-center">
                                                <img src='@category.ImagePath' title='@category.Name' class="card-img" alt='@category.Name' />
                                            </div>
                                            <div class="text-center">@category.Description</div>
                                        </div>
                                        <div class="card-footer text-center desc-view-btn">
                                            <a class="btn btn-success" href="/Product/@category.categoryId">View</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@code
{
    private string CategoryName { get; set; }

    public async Task FilterByProduct(string productName)
    {
        CategoryName = productName; //in a category page, a category shoulb be searched rather than product
        ProductService.FilteredProducts.ToList();

        await JSRuntime.InvokeVoidAsync("MoveUp");
    }
   
}