@page "/Product/{categoryId}"
@using ShoppingApp.Services

@inject ProductServices ProductService
@inject CartServices CartService

@{ 
    var products = ProductService.Products;

    products = products.Where(p => p.CategoryId == int.Parse(categoryId)).ToList();
}

<nav class="user-nav border-success text-secondary sticky-top">
    <ul class="col-sm-12">
        <li class="float-left">
            <NavLink class="nav-link" href="Cart" Match="NavLinkMatch.All">
                <span class="oi oi-cart text-success" aria-hidden="true"></span> <span class="text-secondary">My cart&nbsp;&nbsp;</span>  <span class="badge-outline-success">    @CartService.Carts.Count()</span>
            </NavLink>
        </li>
        <li class="float-right">
            <NavLink class="nav-link" href="#" Match="NavLinkMatch.All">
                <span class="oi oi-person text-success" aria-hidden="true"></span> <span class="text-secondary">User</span>
            </NavLink>
        </li>
    </ul>
</nav>

<header class="text-center btn-success">
    <h3 class="font-weight-bold text-secondary text-uppercase">Shop for any type of food you like</h3>
    <h5 class="text-secondary">Select for a Product</h5>
</header>
<div class="row">
    @if (products == null)
    {
        <h3>No Products available</h3>
    }
    else
    {
        foreach (var product in products)
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header text-center text-uppercase font-weight-bolder">
                        @product.Name
                    </div>
                    <div class="card-body">
                        <div class="text-center">
                            <img src='@product.PhotoPath' title='@product.Name' class="card-img" alt='@product.Name' />
                        </div>
                        <div class="text-center">@product.Description</div>
                        <div class="text-right btn btn-secondary">R @product.Price</div>
                    </div>
                 
                    @if (CartService.Carts.FirstOrDefault(c => c.ProductId == product.ProductId) != null)
                    {
                        <div class="card-footer text-center" onclick="ChangeButtonForm('@product.ProductId')">
                            <div class="input-group">
                                <button class="btn btn-success rem-Product" id="@product.ProductId" @onclick="(() => CartService.DecreaseProductQuantity(product.ProductId, 1, 1))"><b>-</b></button>
                                <input type="text" readonly class="text-center form-control" value="@CartService.Carts.FirstOrDefault(c => c.ProductId == product.ProductId).Quantity in a Cart" />
                                <button class="btn btn-success add-Product" id="@product.ProductId" @onclick="(() => CartService.IncreaseProductQuantity(product.ProductId, 1, 1))"><b>+</b></button>

                            </div>

                        </div>
                    }
                    else
                    {
                        <div class="card-footer text-center desc-view-btn" onclick="ChangeButtonForm('@product.ProductId')">
                            <button class="btn btn-success" id="@product.ProductId" @onclick="(() => CartService.CreateCart(product.ProductId, 1, 1))">Add to cart</button>
                        </div>
                    }
                    

                </div>
            </div>
        }
    }
</div>
@code
{
    [Parameter]
    public string categoryId { get; set; }
}