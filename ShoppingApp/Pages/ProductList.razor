@page "/Product/{categoryId}"
@using ShoppingApp.Services

@inject ProductServices ProductService
@inject CartServices CartService

<NavMenu cartCount="@CartService.Carts.Count()"></NavMenu>

@*End of nav*@
<div class="main container">
    <div class="content px-4">

        @{
            var products = ProductService.Products;

            products = products.Where(p => p.CategoryId == int.Parse(categoryId)).ToList();
        }

        <div class="row">
            @if (products == null)
            {
                <h3>No Products available</h3>
            }
            else
            {
                foreach (var product in products)
                {
                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-header text-center text-uppercase font-weight-bolder">
                                @product.Name
                            </div>
                            <div class="card-body">
                                <div class="text-center">
                                    <img src='@product.PhotoPath' title='@product.Name' class="card-img" alt='@product.Name' />
                                </div>
                                <div class="text-center">@product.Description</div>
                                <div class="text-right btn btn-secondary">R @product.Price</div>
                            </div>

                            @if (CartService.Carts.FirstOrDefault(c => c.ProductId == product.ProductId) != null)
                            {
                                <div class="card-footer text-center" onclick="ChangeButtonForm('@product.ProductId')">
                                    <div class="input-group">
                                        <button class="btn btn-success rem-Product" id="@product.ProductId" @onclick="(() => CartService.DecreaseProductQuantity(product.ProductId, 1, 1))"><b>-</b></button>
                                        <input type="text" readonly class="text-center form-control" value="@CartService.Carts.FirstOrDefault(c => c.ProductId == product.ProductId).Quantity in a Cart" />
                                        <button class="btn btn-success add-Product" id="@product.ProductId" @onclick="(() => CartService.IncreaseProductQuantity(product.ProductId, 1, 1))"><b>+</b></button>

                                    </div>

                                </div>
                            }
                            else
                            {
                                <div class="card-footer text-center desc-view-btn" onclick="ChangeButtonForm('@product.ProductId')">
                                    <button class="btn btn-success" id="@product.ProductId" @onclick="(() => CartService.CreateCart(product.ProductId, 1, 1))">Add to cart</button>
                                </div>
                            }


                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
        @code
{
            [Parameter]
            public string categoryId { get; set; }
        }
