@page "/ProductDetails/{ProductId}"
@using ShoppingApp.Services

@inject ProductServices ProductService
@inject CartServices CartService

<NavMenu cartCount="@CartService.CustomerProducts.Count()"></NavMenu>

<div class="main container">
    <div class="content px-4">

        @{
            var products = ProductService.Products;

            var product = products.FirstOrDefault(p => p.ProductId == int.Parse(ProductId));
        }

        <div class="">
            @if (products == null)
            {
                <h3>No Products available</h3>
            }
            else
            {
                <div class="my-5 h-100">
                    <div class="row">
                        <div class="col-sm-12 col-md-8 col-lg-5">
                            <div class="text-center text-uppercase font-weight-bolder">
                                @product.Name
                            </div>
                            <div class="text-center">
                                <img src='@product.PhotoPath' title='@product.Name' class="card-img-details h-100" alt='@product.Name' />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-8 col-lg-5 my-auto border-4 border-right border-success">@product.Description</div>
                        <div class="h-25 my-auto btn btn-secondary mx-3">R @product.Price</div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-md-8 col-lg-5 my-4">
                            @if (CartService.CustomerProducts.FirstOrDefault(c => c.ProductId == product.ProductId) != null)
                            {
                                <div class="text-center" onclick="ChangeButtonForm('@product.ProductId')">
                                    <div class="input-group">
                                        <button class="btn w-25 btn-success rem-Product" id="@product.ProductId" @onclick="(() => CartService.DecreaseProductQuantity(product.ProductId, 1, 1))"><b>-</b></button>
                                        <input type="text" readonly class="text-center form-control float-left" value="@CartService.CustomerProducts.FirstOrDefault(c => c.ProductId == product.ProductId).Quantity in a Cart" />
                                        <button class="btn w-25 btn-success add-Product" id="@product.ProductId" @onclick="(() => CartService.IncreaseProductQuantity(product.ProductId, 1, 1))"><b>+</b></button>

                                    </div>

                                </div>
                            }
                            else
                            {
                                <div class="text-center desc-view-btn" onclick="ChangeButtonForm('@product.ProductId')">
                                    <button class="btn w-25 btn-success" id="@product.ProductId" @onclick="(() => CartService.CreateCart(product.ProductId, 1, 1))">Add to cart</button>
                                </div>
                            }
                        </div>

                    </div>
                    <div>
                        <a class="btn btn-outline-primary" href="/">Back</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@code
{
    [Parameter]
    public string ProductId { get; set; }
}